{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","props","state","data","selectLang","selectStmt","newLang","newStmt","deleteLang","deleteStmt","key","comment","open","options","this","loadData","makeOptions","a","fetch","then","res","json","setState","url","requestOptions","method","headers","body","JSON","stringify","status","alert","forEach","i","push","value","label","lang","stmt","Object","keys","statement","today","Date","year","getFullYear","month","getMonth","day","getDate","id","length","update","code","sample","result","tag","e","target","Helmet","content","className","Button","variant","onClick","postData","bind","TextField","type","onChange","IconButton","size","handleClickNewLang","fontSize","handleClickLang","handleClickNewStmt","handleClickStmt","multiline","maxRows","handleChangeCode","handleChangeSample","handleChangeResult","defaultValue","isMulti","name","map","handleChangeTag","classNamePrefix","color","Dialog","onClose","DialogTitle","DialogActions","handleClickDelete","autoFocus","React","Component","ViewLang","style","backgroundColor","ViewStmt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6baef07.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Helmet } from 'react-helmet';\nimport Select from 'react-select';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nclass App extends React.Component {\n    constructor(props) {\n        super (props)\n        this.state = {\n            data: {},\n            selectLang: \"python\",\n            selectStmt: \"for\",\n            newLang: \"\",\n            newStmt: \"\",\n            deleteLang: \"\",\n            deleteStmt: \"\",\n            key: \"\",\n            comment: \"\",\n            open: \"\",\n            options: [],\n        }\n    }\n\n    componentDidMount() {\n        this.loadData()\n        this.makeOptions()\n    }\n\n    async loadData() {\n        const url = \"http://133.242.158.143:8100/getdata\"\n        return fetch(url)\n            .then((res) => res.json())\n            .then((res) => this.setState({data: res}))\n    }\n\n    async postData() {\n        const data = this.state.data\n        const key = this.state.key\n        const comment = this.state.comment\n        const url = `http://133.242.158.143:8100/postdata?key=${key}&comment=${comment}`\n\n        const requestOptions = {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"text/plain\"},\n            body: JSON.stringify(data)\n        }\n\n        return fetch(url, requestOptions)\n            .then((res) => res.json())\n            .then((res) => {\n                if (res.status === \"true\") {\n                    alert(\"OK\")\n                } else {\n                    alert(\"Key is Incorrect\")\n                }\n            })\n    }\n\n    makeOptions() {\n        const words = [\n            \"python\", \"python3\", \"py\", \"java\", \"ja\", \"javascript\", \"js\", \"kotlin\", \"kt\", \"swift\",\n            \"loop\", \"for\", \"while\", \"break\", \"continue\", \"if\", \"elif\", \"else\", \"in\", \"not\", \"and\", \"or\", \"try\", \"catch\", \"except\", \"error\", \"when\", \"case\", \"switch\", \"then\", \"comment\", \"out\", \"with\", \"open\",\n            \"class\", \"def\", \"function\", \"func\", \"const\", \"let\", \"var\", \"val\", \"global\", \"local\",\n            \"import\", \"from\", \"require\",\n            \"list\", \"array\", \"mutable\", \"dict\", \"dictionary\", \"object\", \"obj\", \"set\", \"map\", \"tuple\", \"range\",\n            \"chr\", \"character\", \"str\", \"string\", \"int\", \"integer\", \"long\", \"float\", \"double\", \"bool\", \"boolean\", \"true\", \"false\", \"date\", \"time\",\n            \"console\", \"log\", \"print\", \"printf\", \"println\", \"reader\", \"read\", \"readline\", \"input\", \"stream\", \"join\", \"pow\", \"power\", \"minus\", \"plus\", \"round\", \"add\", \"append\", \"push\", \"concat\", \"unshift\", \"shift\",  \"delete\", \"pop\", \"remove\", \"removeAt\", \"slice\", \"filter\", \"reduce\", \"some\", \"every\", \"flat\", \"flatMap\", \"splice\", \"find\", \"findindex\", \"includes\", \"lastindex\", \"keys\", \"fill\", \"zfill\", \"round\",  \"enumerate\", \"isnull\", \"forEach\", \"isnumeric\", \"random\", \"randint\", \"ran\", \"len\", \"length\", \"size\", \"reverse\", \"reversed\", \"sort\", \"sorted\", \"shuffle\", \"shuffled\", \"format\", \"f\", \"replace\", \"type\",\n            \"event\", \"mouse\", \"value\", \"key\", \"document\", \"window\", \"listener\", \"context\", \"position\", \"index\", \"url\", \"uri\", \"get\", \"set\", \"item\", \"file\", \"write\", \"read\", \"os\", \"system\", \"request\", \"response\", \"beautifulsoup\", \"soup\", \"subprocess\",\n            \"echo\", \"cat\", \"do\", \"done\", \"sleep\", \n        ]\n        const options = []\n        words.forEach(i => {\n            options.push({value: i, label: i})\n        })\n        this.setState({options: options})\n    }\n\n    handleClickLang(lang) {\n        const stmt = Object.keys(this.state.data[lang].statement)[0]\n        this.setState({\n            selectLang: lang,\n            selectStmt: stmt\n        })\n    }\n\n    handleClickStmt(stmt) {this.setState({selectStmt: stmt})}\n\n    handleClickNewLang() {\n        const data = this.state.data\n        if (this.state.newLang === \"\") {return}\n        else if (this.state.newLang in data) {return}\n\n        const today = new Date()\n        const year = today.getFullYear()\n        const month = today.getMonth() + 1\n        const day = today.getDate()\n\n        data[this.state.newLang] = {\n            id: Object.keys(data).length,\n            statement: {},\n            update: `${year}-${month}-${day}`\n        }\n\n        this.setState({\n            data: data,\n            newLang: \"\"\n        })\n\n    }\n\n    handleClickNewStmt() {\n        const data = this.state.data\n        if (this.state.newStmt === \"\") {return}\n        else if (this.state.newStmt in data[this.state.selectLang].statement) {return}\n\n        data[this.state.selectLang].statement[this.state.newStmt] = {\n            code: \"\",\n            sample: \"\",\n            result: \"\",\n            tag: []\n        }\n        this.setState({\n            data: data,\n            newStmt: \"\"\n        })\n    }\n\n    handleClickDelete() {\n        const data = this.state.data\n        const lang = this.state.deleteLang\n        const stmt = this.state.deleteStmt\n        if (lang === \"\") {alert(\"Delete lang is not defined!!\")}\n        else if (!(lang in data)) {alert(`${lang} is not defined!!`)}\n        else if (stmt === \"\") {\n            delete data[lang]\n            const selectLang = Object.keys(data)[0]\n            const selectStmt = Object.keys(data[lang].statement)[0]\n            this.setState({data: data, selectLang: selectLang, selectStmt: selectStmt})\n            alert(`${lang} deleted!!`)\n        }\n        else if (!(stmt in data[lang].statement)) {alert(`${stmt} is not defined!!`)}\n        else {\n            delete data[lang].statement[stmt]\n            const selectStmt = Object.keys(data[lang].statement)[0]\n            this.setState({selectStmt: selectStmt, data: data})\n            alert(`${lang} ${stmt} deleted!!`)\n        }\n    }\n\n    handleChangeCode(e) {\n        const data = this.state.data\n        data[this.state.selectLang].statement[this.state.selectStmt].code = e.target.value\n        this.setState({data: data})\n    }\n\n    handleChangeSample(e) {\n        const data = this.state.data\n        data[this.state.selectLang].statement[this.state.selectStmt].sample = e.target.value\n        this.setState({data: data})\n    }\n\n    handleChangeResult(e) {\n        const data = this.state.data\n        data[this.state.selectLang].statement[this.state.selectStmt].result = e.target.value\n        this.setState({data: data})\n    }\n\n    handleChangeTag(e) {\n        const data = this.state.data\n        const tag = []\n        e.forEach(i => {tag.push(i.value)})\n        data[this.state.selectLang].statement[this.state.selectStmt].tag = tag\n        this.setState({data: data})\n    }\n\n    render() {\n        return (\n<div>\n<Helmet>\n<meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\">\n</meta>\n<title>PiyoCSDataForm</title>\n</Helmet>\n\n<div id=\"content\">\n    <div id=\"content_header\" >\n        <h2 id=\"title\" className=\"title_view\">data isert form</h2>\n        <Button\n            variant=\"contained\"\n            className=\"save_button\"\n            onClick={() => {this.postData.bind(this)()}} >\n            send data\n        </Button>\n        <TextField\n            className=\"save_button\"\n            id=\"key_input\"\n            label=\"password\"\n            type=\"password\"\n            variant=\"filled\"\n            value={this.state.key}\n            onChange={e => {this.setState({key: e.target.value})}} />\n        <TextField\n            className=\"save_button\"\n            id=\"comment_input\"\n            label=\"comment\"\n            variant=\"filled\"\n            value={this.state.comment}\n            onChange={e => {this.setState({comment: e.target.value})}} />\n    </div>\n    <div id=\"content_body\">\n        <div className=\"content_body_item\" id=\"langs\">\n            <h2>langs</h2>\n            <TextField\n                className=\"new_text\"\n                id=\"input_newLang\"\n                label=\"newLang\"\n                variant=\"filled\"\n                value={this.state.newLang}\n                onChange={e => {this.setState({newLang: e.target.value})}} />\n            <IconButton aria-label=\"add\" size=\"large\" onClick={this.handleClickNewLang.bind(this)} >\n                <AddIcon fontSize=\"inherit\" className=\"add_Icon\" />\n            </IconButton>\n            <ViewLang \n                data={this.state.data} \n                onClick={this.handleClickLang.bind(this)} \n                selectLang={this.state.selectLang} />\n        </div>\n        <div className=\"content_body_item\" id=\"stmts\">\n            <h2>stmt</h2>\n            <TextField\n                className=\"new_text\"\n                id=\"input_newStmt\"\n                label=\"newStmt\"\n                variant=\"filled\"\n                value={this.state.newStmt}\n                onChange={e => {this.setState({newStmt: e.target.value})}} />\n            <IconButton aria-label=\"add\" size=\"large\" onClick={this.handleClickNewStmt.bind(this)} >\n                <AddIcon fontSize=\"inherit\" className=\"add_Icon\" />\n            </IconButton>\n            <ViewStmt\n                data={this.state.data}\n                lang={this.state.selectLang}\n                selectStmt={this.state.selectStmt}\n                onClick={this.handleClickStmt.bind(this)} />\n        </div>\n        <div className=\"content_body_item\" id=\"items\" >\n            <div id=\"view_items\">\n                <div className=\"item_title\" >\n                    <h2>{`${this.state.selectLang} -> ${this.state.selectStmt}`} </h2>\n                </div>\n                <div className=\"input_text\">\n                    <h3>code: </h3>\n                    <TextField\n                        className=\"text_field\"\n                        id=\"input_code\"\n                        label=\"Code\"\n                        multiline\n                        maxRows={8}\n                        value={(this.state.data[this.state.selectLang])? this.state.data[this.state.selectLang].statement[this.state.selectStmt].code : \"\"}\n                        onChange={this.handleChangeCode.bind(this)}\n                        variant=\"filled\" />\n                </div>\n                <div className=\"input_text\">\n                    <h3>sample: </h3>\n                    <TextField\n                        className=\"text_field\"\n                        id=\"input_sample\"\n                        label=\"Sample\"\n                        multiline\n                        maxRows={8}\n                        value={(this.state.data[this.state.selectLang])? this.state.data[this.state.selectLang].statement[this.state.selectStmt].sample : \"\"}\n                        onChange={this.handleChangeSample.bind(this)}\n                        variant=\"filled\" />\n                </div>\n                <div className=\"input_text\">\n                    <h3>result: </h3>\n                    <TextField\n                        className=\"text_field\"\n                        id=\"input_result\"\n                        label=\"result\"\n                        multiline\n                        maxRows={8}\n                        value={(this.state.data[this.state.selectLang])? this.state.data[this.state.selectLang].statement[this.state.selectStmt].result : \"\"}\n                        onChange={this.handleChangeResult.bind(this)}\n                        variant=\"filled\" />\n                </div>\n                <div className=\"imput_select\">\n                    <h3>tag: </h3>\n                    <Select\n                        id=\"input_tag\"\n                        defaultValue={null}\n                        isMulti\n                        name=\"tag\"\n                        options={this.state.options}\n                        value={(this.state.data[this.state.selectLang])? this.state.data[this.state.selectLang].statement[this.state.selectStmt].tag.map(i => {return {value: i, label: i}}): null}\n                        onChange={this.handleChangeTag.bind(this)}\n                        classNamePrefix=\"select\" />\n                </div>\n            </div>\n        </div>\n    </div>\n    <div id=\"content_footer\">\n        <Button\n            variant=\"contained\"\n            className=\"save_button\"\n            color=\"error\"\n            onClick={() => {this.setState({open: true})}} >\n            delete\n        </Button>\n        <Dialog\n            open={this.state.open}\n            onClose={() => {this.setState({open: false})}}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {`${this.state.deleteLang}-${this.state.deleteStmt}|| Delete Are you sure you want to?`}\n            </DialogTitle>\n            <DialogActions>\n                <Button onClick={() => {\n                    this.setState({open: false})\n                    alert(\"Canceled it\")\n                }}>\n                cancel\n                </Button>\n                <Button onClick={() => {\n                    this.setState({open: false})\n                    this.handleClickDelete.bind(this)()\n                }} autoFocus>\n                delete\n                </Button>\n            </DialogActions>\n        </Dialog>\n        <TextField\n            className=\"save_button\"\n            id=\"delete_stmt\"\n            label=\"deleteStmt\"\n            variant=\"filled\"\n            value={this.state.deleteStmt}\n            onChange={e => {this.setState({deleteStmt: e.target.value})}} />\n        <TextField\n            className=\"save_button\"\n            id=\"delete_lang\"\n            label=\"deleteLang\"\n            variant=\"filled\"\n            value={this.state.deleteLang}\n            onChange={e => {this.setState({deleteLang: e.target.value})}} />\n    </div>\n</div>\n</div>\n\n        )\n    }\n}\n\nconst ViewLang = (props) => {\n    if (Object.keys(props.data).length === 0){ return <div />}\n    else {\n        return Object.keys(props.data).map(lang => {\n            if (lang === props.selectLang) {return (\n                <div \n                    key={lang}\n                    onClick={() => {props.onClick(lang)}} \n                    className=\"select\" \n                    style={{backgroundColor: \"blue\"}} >\n                    <h3>{lang}</h3>\n                </div>\n            )}\n            else {return (\n                <div \n                    key={lang}\n                    onClick={() => {props.onClick(lang)}} \n                    className=\"select\" >\n                    <h3>{lang}</h3>\n                </div>\n            )}\n        })\n    }\n}\n\nconst ViewStmt = (props) => {\n    if (Object.keys(props.data).length === 0) { return <div /> }\n    else {\n        return Object.keys(props.data[props.lang].statement).map(stmt => {\n            if (stmt === props.selectStmt) {return (\n                <div \n                    key={stmt}\n                    onClick={() => {props.onClick(stmt)}} \n                    className=\"select\"\n                    style={{backgroundColor:\"blue\"}} >\n                    <h3>{stmt}</h3>\n                </div>\n            )}\n            else {return (\n                <div\n                    key={stmt}\n                    onClick={() => { props.onClick(stmt)}}\n                    className=\"select\" >\n                    <h3>{stmt}</h3>\n                </div>\n            )}\n        })\n    }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}